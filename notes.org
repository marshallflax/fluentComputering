* Introduction
Computer programming, done well, is essentially a collaborative activity.  Sometimes you will collaborate with your colleagues, but you will also always be collaborating with the computer itself.  The objective of this guide is to help non-programmers learn to collaborate well with their computers, which is an act commonly known as "computer programming".

Decades ago, the interfaces provided by computers were bare and rigid.  The code written by a programmer consisted of a series of barked orders: "add 2 to this thing!", "display that thing!", "if that other thing is equal to zero, then go to step number 23!".  This drill-sergeant approach to computing does allow computers to do just about anything that a computer can do, but it isn't exactly a happy approach.  But more importantly, this "imperative" style requires that the commands be precisely thought-out by the programmer -- the slightest omission (or unconsidered scenario), and suddenly we have a "bug".

Foreign-language clases used to start by defining step-by-step the grammar and syntax of a language, but nowadays we recognize that immersing the student from the beginning with the "spirit" of the language (and only bringing formal grammar in as the student progresses) is a far better approach.  This guide will similarly attempt to immerse the reader -- from the beginning -- in best programming practices, and only bring in the details as needed.  But our hope is that the reader will learn to think in new ways which will allow them to productively learn from and direct the amazingly-powerful systems now at our fingertips.

